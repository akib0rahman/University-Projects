<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hC7S7mElAAAAAElFTkSuQmCC
</value>
  </data>
</root>